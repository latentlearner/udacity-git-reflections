How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Could see the difference right away when it was presented. I might have missed the typo had I been going through the individual files separately.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having the entire history available would enable me see to what changed and when. Knowing who made those changes would hint about their purpose.
    We can see the file evolve through various versions and maybe even restore to an old version

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros-Logical versions, no half done solutions.
    Cons - Might miss an important version and forget to commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Tracking related files together helps maintain the group as a whole when changes in one file would likely affect others as well

How can you use the commands git log and git diff to view the history of files?

    git log gives an overview of the changes and commits to the repository
    git diff can be used to find the actual changes that were made between two commits.

How might using version control make you more confident to make changes that
could break something?

    Knowing that you can always go back to a previous working version does boost confidence for experimental changes.

Now that you have your workspace set up, what do you want to try using Git for?

    Use git for versioning all my future projects.
